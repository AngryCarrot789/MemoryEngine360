<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:MemEngine360.Avalonia"
             xmlns:avControls="clr-namespace:PFXToolKitUI.Avalonia.AvControls;assembly=PFXToolKitUI.Avalonia"
             xmlns:cb="clr-namespace:MemEngine360.BaseFrontEnd;assembly=MemEngine360.BaseFrontEnd"
             mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="200"
             x:Class="MemEngine360.Avalonia.ScanOptionsControl">
    <Grid x:Name="PART_Grid_ScanInput" ColumnDefinitions="64,3,*,Auto" RowDefinitions="24,3,24,3,Auto" Margin="0">
        <TextBlock Grid.Column="0" Grid.Row="0" Text="Value" VerticalAlignment="Center" Padding="4,0" x:Name="PART_ValueOrBetweenTextBlock"/>
        <TextBlock Grid.Column="0" Grid.Row="2" Text="Data Type" VerticalAlignment="Center" Padding="4,0"/>

        <Grid x:Name="PART_UseFirstOrPrevButtonGrid" Grid.Column="3" RowDefinitions="*,3,*" Margin="3,0,0,0">
            <ToggleButton Grid.Row="0" Padding="5,0" x:Name="PART_UseFirstValue"
                          BorderBrush="{DynamicResource ABrush.Tone6.Border.Static}"
                          VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          ToolTip.Tip="Use the rows' First Value as the search value">
                <TextBlock Text="First" FontSize="8" FontFamily="{StaticResource FontOxanium}" Padding="0" Margin="0,-1,0,0"/>
            </ToggleButton>
            <ToggleButton Grid.Row="2" Padding="5,0" x:Name="PART_UsePreviousValue"
                          BorderBrush="{DynamicResource ABrush.Tone6.Border.Static}"
                          VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                          ToolTip.Tip="Use the rows' Previous Value as the search value">
                <TextBlock Text="Prev" FontSize="8" FontFamily="{StaticResource FontOxanium}" Padding="0" Margin="0,-1,0,0"/>
            </ToggleButton>
        </Grid>
        <TextBox x:Name="PART_Input_Value1" FontFamily="Consolas"
                 Grid.Column="2" Grid.Row="0" 
                 Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Background}"
                 BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Border}"
                 Foreground="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Foreground}"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden"/>

        <Grid x:Name="PART_Grid_Input_Between" Grid.Column="2" Grid.Row="0" ColumnDefinitions="*,3,*" IsVisible="False">
            <TextBox x:Name="PART_Input_BetweenA" FontFamily="Consolas" Grid.Column="0"
                     Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Background}"
                     BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Border}"
                     Foreground="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Foreground}"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"/>
            
            <TextBox x:Name="PART_Input_BetweenB" FontFamily="Consolas" Grid.Column="2"
                     Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Background}"
                     BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Border}"
                     Foreground="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.TextBox.Foreground}"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"/>
        </Grid>

        <ComboBox x:Name="PART_DataTypeCombo"
                  Grid.Column="2" Grid.Row="2"
                  FontFamily="Consolas"
                  Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.ScanTypeComboBox.Background}"
                  BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.ScanTypeComboBox.Border}"
                  Padding="4,1" VerticalContentAlignment="Center"
                  ToolTip.Tip="Specified the type of data to search for"/>
        <ToggleButton x:Name="PART_ToggleUnknownDataType" 
                Grid.Column="3" Grid.Row="2" 
                Margin="3,0,0,0" 
                Content="Any"
                ToolTip.Tip="Toggles the unknown data type scan. When enabled, we attempt to find integers, floats and strings that are effectively equal to the search query"/>
        <TabControl Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="4"
                    x:Name="PART_ScanSettingsTabControl"
                    Background="{DynamicResource PanelBackground3}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource ABrush.Tone6.Border.Static}">
            <TabItem x:Name="PART_TabItemInteger" Header="Integer" ToolTip.Tip="Search options for integer data types (byte, short, int, long)">
                <StackPanel Margin="3" Spacing="3">
                    <CheckBox x:Name="PART_DTInt_IsHex" Content="Parse value(s) as hexadecimal">
                        <ToolTip.Tip>
                            <TextBlock Padding="4">
                                <Run Text="When true, integers are parsed a HEX values (specifying 400 gives an int value of 1024)"/>
                                <LineBreak/>
                                <Run Text="When false, they are parsed as regular integers (400 == 400)"/>
                                <LineBreak/>
                                <Run Text="If the scan type is Between, this option is applied to both fields"/>
                            </TextBlock>
                        </ToolTip.Tip>
                    </CheckBox>

                    <DockPanel>
                        <TextBlock Text="Compare Mode" DockPanel.Dock="Left" Margin="2,0,5,0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="PART_ScanTypeCombo1" FontFamily="{StaticResource FontOxanium}"
                                  Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.CompareModeComboBox.Background}"
                                  BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.CompareModeComboBox.Border}"
                                  Padding="4,1" VerticalContentAlignment="Center"/>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="PART_TabItemFloat" Header="Float" ToolTip.Tip="Search options for floating point numbers (float/single, double)">
                <StackPanel Margin="3" Spacing="3">
                    <RadioButton x:Name="PART_DTFloat_Truncate" Content="Truncated to query">
                        <ToolTip.Tip>
                            <TextBlock TextWrapping="Wrap">
                                <Run Text="Truncates (removes) decimal places from the console value to the number of decimal places in the query"/>
                                <LineBreak/>
                                <Run Text="E.g. if the console contains '23.12783' and you search for '23.13', the effective comparison is between '23.13' and '23.12', therefor, they won't match"/>
                            </TextBlock>
                        </ToolTip.Tip>
                    </RadioButton>
                    <RadioButton x:Name="PART_DTFloat_RoundToQuery" Content="Round to query">
                        <ToolTip.Tip>
                            <TextBlock TextWrapping="Wrap">
                                <Run Text="Rounds the console value to the number of decimal places in the query"/>
                                <LineBreak/>
                                <Run Text="E.g. if the console contains '23.12783' and you search for '23.13', they will both match"/>
                            </TextBlock>
                        </ToolTip.Tip>
                    </RadioButton>
                    <DockPanel>
                        <TextBlock Text="Compare Mode" DockPanel.Dock="Left" Margin="2,0,5,0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="PART_ScanTypeCombo2" FontFamily="{StaticResource FontOxanium}"
                                  Background="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.CompareModeComboBox.Background}"
                                  BorderBrush="{DynamicResource ABrush.MemEngine.MainView.ScanOptions.CompareModeComboBox.Border}"
                                  Padding="4,1" VerticalContentAlignment="Center"/>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="PART_TabItemString" Header="String" ToolTip.Tip="Search options for strings">
                <StackPanel Margin="3" Spacing="3">
                    <Grid RowDefinitions="Auto,3,Auto" ColumnDefinitions="Auto,5,Auto">
                        <RadioButton Grid.Row="0" Grid.Column="0" x:Name="PART_DTString_ASCII" Content="ASCII" ToolTip.Tip="Search for text using ASCII encoding (default)"/>
                        <RadioButton Grid.Row="0" Grid.Column="2" x:Name="PART_DTString_UTF8" Content="UTF8" ToolTip.Tip="Search for text using UTF8 encoding"/>
                        <RadioButton Grid.Row="2" Grid.Column="0" x:Name="PART_DTString_UTF16" Content="UTF16" ToolTip.Tip="Search for text using UTF16 aka Unicode encoding"/>
                        <RadioButton Grid.Row="2" Grid.Column="2" x:Name="PART_DTString_UTF32" Content="UTF32" ToolTip.Tip="Search for text using UTF32 encoding"/>
                    </Grid>
                    <CheckBox Content="Ignore Cases" x:Name="PART_IgnoreCases"/>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="PART_TabItemUnknown" Header="Unknown" ToolTip.Tip="Search options for unknown data types">
                <StackPanel>
                    <TextBlock Text="Scanning order" Padding="3,2"/>
                    <avalonia:ScanningOrderListBox x:Name="PART_OrderListBox">
                        <ListBox.Theme>
                            <ControlTheme TargetType="{x:Type avalonia:ScanningOrderListBox}" BasedOn="{StaticResource {x:Type ListBox}}"/>
                        </ListBox.Theme>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="{x:Type avalonia:ScanningOrderListBoxItem}">
                                <Setter Property="Background" Value="{DynamicResource ABrush.Tone4.Background.Static}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone1.Border.Static}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="Padding" Value="2,2"/>
                                <Setter Property="Template">
                                    <ControlTemplate TargetType="{x:Type avalonia:ScanningOrderListBoxItem}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                x:Name="PART_RootOLBI">
                                            <DockPanel>
                                                <Border x:Name="PART_DragGrip" Background="Transparent" Width="20" DockPanel.Dock="Right">
                                                    <avControls:IconControl Icon="{x:Static cb:SimpleIcons.DragGripIcon}" Height="16"/>
                                                </Border>
                                                <CheckBox x:Name="PART_Toggle"/>
                                            </DockPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter>
                                <Style Selector="^:pointerover /template/ Border#PART_RootOLBI">
                                    <Setter Property="Background" Value="{DynamicResource ABrush.Tone4.Background.MouseOver}"/>
                                </Style>

                                <Style Selector="^:selected[IsFocused=False] /template/ Border#PART_RootOLBI">
                                    <Setter Property="Background" Value="{DynamicResource ListBoxItem.SelectedInactive.Background}"/>
                                </Style>

                                <Style Selector="^:selected[IsFocused=True] /template/ Border#PART_RootOLBI">
                                    <Setter Property="Background" Value="{DynamicResource ListBoxItem.SelectedActive.Background}"/>
                                </Style>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                    </avalonia:ScanningOrderListBox>
                    <Border Background="{DynamicResource ABrush.Tone6.Border.Static}">
                        <Grid ColumnDefinitions="2*,1,3*,1,3*" Margin="0,1,0,1">
                            <ToggleButton x:Name="PART_Toggle_Float" Grid.Column="0" Content="F32" BorderThickness="0" ToolTip.Tip="Toggle scanning for float (32)"/>
                            <ToggleButton x:Name="PART_Toggle_Double" Grid.Column="2" Content="D64" BorderThickness="0" ToolTip.Tip="Toggle scanning for double (64)"/>
                            <ToggleButton x:Name="PART_Toggle_String" Grid.Column="4" Content="abc" BorderThickness="0" ToolTip.Tip="Toggle scanning for strings"/>
                        </Grid>
                    </Border>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>